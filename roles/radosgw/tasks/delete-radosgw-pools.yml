---
- name: Allow to Delete Pool from Mon
  shell: |
    ceph tell mon.\* injectargs --mon-allow-pool-delete true
  register: allow_delete_pool
  ignore_errors: true
- debug: msg={{ allow_delete_pool }}
  when: print_debug == true


- name: Remove Rados Gateway Pools
  shell: |
    ceph osd pool rm {{ item }} {{ item }} --yes-i-really-really-mean-it
  register: remove_rgw_pool
  ignore_errors: true
  until: remove_rgw_pool is succeeded
  retries: 5
  delay: 10
  with_items:
    - "jz01.rgw.buckets.data"
    - "jz01.rgw.buckets.index"
    - "jz01.rgw.control"
    - "jz01.rgw.log"
    - "jz01.rgw.otp"
    - "jz01.rgw.meta"
    - "jz02.rgw.buckets.data"
    - "jz02.rgw.buckets.index"
    - "jz02.rgw.control"
    - "jz02.rgw.log"
    - "jz02.rgw.meta"
    - "jz02.rgw.otp"
    - "default.rgw.buckets.data"
    - "default.rgw.buckets.index"
    - "default.rgw.log"
    - "default.rgw.meta"
    - "default.rgw.control"
    - ".rgw.root"
- debug: msg={{ remove_rgw_pool }}
  when: print_debug == true


- name: Check if Pools are still Unknown
  shell: |
    ceph pg stat
  register: check_unknown_pool
  ignore_errors: true
  until: check_unknown_pool.stdout.find("unknown") == -1
  retries: 30
  delay: 10
- debug: msg={{ check_unknown_pool }}
  when: print_debug == true


- name: Check if Pools are Active+Clean
  shell: |
    ceph pg stat
  register: check_scrub_pool
  ignore_errors: true
  until: check_scrub_pool.stdout.find("scrubbing") == -1
  retries: 20
  delay: 15
- debug: msg={{ check_scrub_pool }}
  when: print_debug == true


- name: Delete Rados Gateway Users
  shell: |
    ceph auth del client.{{ item }}
  register: delete_rgw_user
  ignore_errors: true
  with_items:
    - "bootstrap-rgw"
- debug: msg={{ delete_rgw_user }}
  when: print_debug == true

