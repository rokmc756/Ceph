# https://www.middlewareinventory.com/blog/ansible-dict/
#- name:  Enable Devel Package Repository
#  shell: |
#    dnf config-manager --set-enabled devel
#  register: enable_devel_repo
#- debug: msg={{ enable_devel_repo }}
#  when: print_debug == true


#- name: Install MC S3 Client Packages
#  import_tasks: install-mc-client.yml


- name: Create S3 Base Directory for Download
  file:
    path: "/root/s3-base/download"
    state: directory
    owner: root
    group: root
    mode: 0755
    recurse: yes
  register: create_rgw_down_dir
  with_items:
    - "{{ rgw.users }}"
- debug: msg={{ create_rgw_down_dir }}
  when: print_debug == true


- name: Create S3 Base Directory for Upload
  file:
    path: "/root/s3-base/upload"
    state: directory
    owner: root
    group: root
    mode: 0755
    recurse: yes
  register: create_rgw_up_dir
  with_items:
    - "{{ rgw.users }}"
- debug: msg={{ create_rgw_up_dir }}
  when: print_debug == true


- name: Copy parquet test files to upload and download into S3
  copy: src={{ item }} dest=/root/s3-base/{{ item }} mode=0644 owner=root group=root
  register: parquet_files_copied
  with_items:
    - "part-m-00001.gz.parquet"
    - "part-m-00003.gz.parquet"
    - "part-m-00005.gz.parquet"
    - "part-m-00000.gz.parquet"
    - "part-m-00002.gz.parquet"
    - "part-m-00004.gz.parquet"
    - "part-m-00006.gz.parquet"


- name: Upload parquet test files into S3
  shell: |
    /usr/local/bin/mc alias set test http://192.168.0.73:7480 {{ item.access_key }} {{ item.secret_key }} --api "s3v4" --path "on"
    /usr/local/bin/mc cp /root/s3-base/part-m-*.gz.parquet test/{{ item.bucket }}/
  register: upload_files_s3
  with_items: "{{ rgw.users }}"
- debug: msg={{ upload_files_s3 }}
  when: print_debug == true


- name: Download parquet test files into S3
  shell: |
    /usr/local/bin/mc alias set test http://192.168.0.73:7480 {{ item.access_key }} {{ item.secret_key }} --api "s3v4" --path "on"
    /usr/local/bin/mc cp test/{{ item.bucket }}/part-m-*.gz.parquet /root/s3-base/download/
  register: download_files_s3
  with_items: "{{ rgw.users }}"
- debug: msg={{ download_files_s3 }}
  when: print_debug == true


# https://github.com/hetznercloud/ceph-s3-box
# These examples are performed using the MinIO Client (mc) but any other s3 clients will work, too.
#
# mc config host add s3tokyo https://s3-ap-northeast-1.amazonaws.com <access_key> <secret_key>

# Set up an alias for MinIO to interact with the RADOS Gateway
# mc alias set test http://127.0.0.1:7480 radosgwadmin radosgwadmin --api "s3v4" --path "on"
#
# Create a bucket named "my-bucket"
# mc mb test/my-bucket
#
# List all buckets
# mc ls test
#
# Upload a file named "example.txt" to the "my-bucket" bucket
# mc cp example.txt test/my-bucket/example.txt
#
# Download the "example.txt" file from the "my-bucket" bucket
# mc cp test/my-bucket/example.txt ./downloaded-example.txt
#
# Remove the "example.txt" file from the "my-bucket" bucket
# mc rm test/my-bucket/example.txt
#
# Remove the "my-bucket" bucket
# mc rb --force test/my-bucket
#


