# https://www.server-world.info/en/note?os=CentOS_Stream_9&p=ceph18&f=5
# firewall-cmd --zone=public --permanent --add-port=7480/tcp
# firewall-cmd --reload
#
# Ceph {{ ceph.project_name }} : Ceph Object Gateway 2023/08/21
#
# Enable Ceph Object Gateway (RADOSGW) to access to Ceph Cluster Storage via Amazon S3 or OpenStack Swift compatible API.
# This example is based on the environment like follows.
#
#                                            |
#        +--------------------+              |                +--------------------+
#        |                    |              |                |                    |
#        |   [dlp.srv.world]  |              |                |  [rk9-ceph-mon03]  |
#        |                    | 192.168.1.x  | 192.168.1.73   |                    |
#        |     Ceph Client    +--------------+----------------+      RADOSGW       |
#        |                    |              |                |                    |
#        +--------------------+              |                +--------------------+
#                                            |
#                                            |
#            +-------------------------------+----------------------------+
#            |                               |                            |
#            | 192.168.1.71                  | 192.168.1.72               | 192.168.1.73
#+-----------+-----------+        +----------+-----------+    +-----------+-----------+
#|                       +        |                      |    |                       |
#|   [rk9-ceph-mon01]    |        |   [rk9-ceph-mon02]   |    |   [rk9-ceph-mon03]    |
#|                       +--------+                      +----+                       |
#|    Monitor Daemon     |        |    Monitor Daemon    |    |    Monitor Daemon     |
#|    Manager Daemon     +--------+    Manager Daemon    +----+    Manager Daemon     |
#|                       |        |                      |    |                       |
#+-----------------------+        +----------------------+    +-----------------------+
#            |                            |                            |
#            |                            |                            |
#            | 192.168.1.74               | 192.168.1.75               | 192.168.1.76
#+-----------+-----------+    +-----------+-----------+    +-----------+-----------+
#|                       |    |                       |    |                       |
#|   [rk9-ceph-osd01]    |    |   [rk9-ceph-osd02]    |    |   [rk9-ceph-osd03]    |
#|    Object Storage     +----+    Object Storage     +----+    Object Storage     |
#|                       |    |                       |    |                       |
#+-----------------------+    +-----------------------+    +-----------------------+


#- name: Install required packages for RADOSGW
#  yum:
#    name: "{{ item }}"
#    state: present
#  register: install_required_pkgs
#  with_items:
#    - "centos-release-ceph-{{ ceph.project_name }}"
#    - "epel-release"
#    - "ceph-radosgw"
#- debug: msg={{ install_required_pkgs }}
#  when: print_debug == true and inventory_hostname in hostvars[groups['mon'][2]]['ansible_hostname']
# https://medium.com/@avmor/how-to-configure-rgw-multisite-in-ceph-65e89a075c1f


- name: Add Lines for Setting Rados Gateway in /etc/ceph/ceph.conf
  lineinfile:
    path: /etc/ceph/ceph.conf
    line: "{{ item }}"
  delegate_to: "{{ hostvars[groups['mon'][0]]['ansible_hostname'] }}"
  delegate_facts: true
  register: add_rgw_config
  with_items:
    - ""
    - "[client.{{ hostvars[inventory_hostname]['ansible_hostname'] }}]"
    - "host = {{ hostvars[inventory_hostname][_netdev]['ipv4']['address'] }}"
    - "rgw dns name = {{ hostvars[inventory_hostname]['ansible_hostname'] }}.{{ _rgw.users[0].domain }}"
    - "keyring = /var/lib/ceph/radosgw/ceph-rgw.{{ hostvars[inventory_hostname]['ansible_hostname'] }}/keyring"
    - "log file = /var/log/ceph/radosgw.gateway.log"
- debug: msg={{ add_rgw_config }}
  when: print_debug == true


- name: Create Directory for Rados Gateway
  file:
    path: "/var/lib/ceph/radosgw/ceph-rgw.{{ hostvars[inventory_hostname]['ansible_hostname'] }}"
    state: directory
    mode: "0755"
    owner: "root"
    group: "root"
  register: create_rgw_dir
- debug: msg={{ create_rgw_dir }}
  when: print_debug == true


- name: Create Authentication for Rados Gateway
  shell: |
    ceph auth {{ item.action }} client.rgw.{{ hostvars[inventory_hostname]['ansible_hostname'] }} \
    osd '{{ item.osd }}' mon '{{ item.mon }}' \
    -o /var/lib/ceph/radosgw/ceph-rgw.{{ hostvars[inventory_hostname]['ansible_hostname'] }}/keyring
  register: create_rgw_auth
  with_items: "{{ _rgw.auth }}"
- debug: msg={{ create_rgw_auth }}
  when: print_debug == true


- name: Change Owership of Ceph Config and Directories
  file:
    dest: "{{ item }}"
    owner: ceph
    group: ceph
    recurse: true
    mode: u=rwX,g=rX,o=rX
  with_items:
    - "/etc/ceph"
    - "/var/lib/ceph/radosgw"
  register: chown_ceph_config_dir
- debug: msg={{ chown_ceph_config_dir }}
  when: print_debug == true


- name: Enable Systemd Service for Rados Gateway
  shell: |
    systemctl enable --now ceph-radosgw@rgw.{{ hostvars[inventory_hostname]['ansible_hostname'] }}
  register: enable_rgw_systemd
- debug: msg={{ enable_rgw_systemd }}
  when: print_debug == true


# radosgw-admin sync status
#          realm  ()
#      zonegroup e183e46b-c10b-4f5a-834d-a3077847ed8c (default)
#           zone 697c4b5b-b69e-4f75-8637-79d1a273756b (default)
#   current time 2024-04-05T06:32:37Z
#zonegroup features enabled: resharding
#                   disabled: compress-encrypted
#  metadata sync no sync (zone is master)

# Verify status
# That's OK if following answers shown after a few seconds
# curl rk9-ceph-mon03:7480
# On Object Gateway Node, Create a S3 compatible user who can authenticate to Object Gateway.
# for example, create [serverworld] user


- name: Transfer Ceph Configuration to Rados Gateway Host
  shell: |
    radosgw-admin user create --uid={{ item.user_name }} --display-name={{ item.display_name }} \
    --email={{ item.email }} --access-key={{ item.access_key }} --secret-key={{ item.secret_key }}
  register: create_rgw_user
  with_items: "{{ _rgw.users }}"
- debug: msg={{ create_rgw_user }}
  when: print_debug == true


- name: Show User List
  shell: |
    radosgw-admin user list
  register: show_rgw_users
- debug: msg={{ show_rgw_users }}
  when: print_debug == true


- name: Show Specific User Information
  shell: |
    radosgw-admin user info --uid={{ item.user_name }}
  register: show_rgw_user
  with_items: "{{ _rgw.users }}"
- debug: msg={{ show_rgw_user }}
  when: print_debug == true


- name: Enable the Object Gateway Management Frontend
  shell: |
    ceph dashboard set-rgw-credentials
    ceph dashboard set-rgw-api-admin-resource admin
    ceph dashboard set-rgw-api-ssl-verify False
    ceph dashboard set-rest-requests-timeout 30
  delegate_to: "{{ hostvars[groups['mon'][0]]['ansible_hostname'] }}"
  delegate_facts: true
  register: enable_obj_gw_mtmt_fe
- debug: msg={{ enable_obj_gw_mtmt_fe }}
  when: print_debug == true


- name: Create Buckets
  shell: |
    /usr/local/bin/mc alias set {{ item.mc_alias }} http://{{ item.endpoint }}:7480 {{ item.access_key }} {{ item.secret_key }} --api "s3v4" --path "on"
    /usr/local/bin/mc mb {{ item.mc_alias }}/{{ item.bucket }}
  delegate_to: "{{ hostvars[groups['mon'][0]]['ansible_hostname'] }}"
  delegate_facts: true
  register: create_buckets
  with_items: "{{ _rgw.users }}"
- debug: msg={{ create_buckets }}
  when: print_debug == true


