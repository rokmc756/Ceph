# For Single
- name: Set Up an Alias for MinIO to Interact With the RADOS Gateway
  shell: |
    /usr/local/bin/mc alias set {{ item.mc_alias }} http://{{ item.endpoint }}:{{ item.rgw_port }} {{ item.access_key }} {{ item.secret_key }} --api "s3v4" --path "on"
  register: mc_alias_set
  ignore_errors: true
  with_items: "{{ rgw.users }}"
  when: ceph.client.rgw.single == true
- debug: msg={{ mc_alias_set }}
  when: print_debug == true and ceph.client.rgw.single == true


- name: Delete Parquet Test Files in S3 Backends
  shell: |
    /usr/local/bin/mc rm --recursive --force {{ item.mc_alias }}/{{ item.bucket }}/
  register: del_parq_files_s3
  ignore_errors: true
  with_items: "{{ rgw.users }}"
  when: ceph.client.rgw.single == true
- debug: msg={{ del_parq_files_s3 }}
  when: print_debug == true and ceph.client.rgw.single == true


# For Multizone
- name: Set Up an Alias for MinIO to Interact With the RADOS Gateway
  shell: |
    /usr/local/bin/mc alias set {{ item.mc_alias }} http://{{ item.endpoint }}:{{ item.rgw_port }} {{ item.access_key }} {{ item.secret_key }} --api "s3v4" --path "on"
  register: mc_alias_set
  ignore_errors: true
  with_items: "{{ rgw.multisite.users }}"
  when: ceph.client.rgw.multi == true
- debug: msg={{ mc_alias_set }}
  when: print_debug == true and ceph.client.rgw.multi == true


- name: Delete Parquet Test Files in S3 Backends
  shell: |
    /usr/local/bin/mc rm --recursive --force {{ item.mc_alias }}/{{ item.bucket }}/
  register: del_parq_files_s3
  ignore_errors: true
  with_items: "{{ rgw.multisite.users }}"
  when: ceph.client.rgw.multi == true
- debug: msg={{ del_parq_files_s3 }}
  when: print_debug == true and ceph.client.rgw.multi == true


- name: Delete S3-Base Test Directory
  file:
    path: "/root/s3-base"
    state: absent
  register: del_s3base_dir
  ignore_errors: true
- debug: msg={{ del_s3base_dir }}
  when: print_debug == true


- name: Delete MC Hidden Directory
  file:
    path: "/root/.mc"
    state: absent
  register: del_mc_dir
  ignore_errors: true
- debug: msg={{ del_mc_dir }}
  when: print_debug == true


# Set up an alias for MinIO to interact with the RADOS Gateway
# mc alias set test http://127.0.0.1:7480 radosgwadmin radosgwadmin --api "s3v4" --path "on"
#
# Create a bucket named "my-bucket"
# mc mb test/my-bucket
#
# List all buckets
# mc ls test
#
# Remove the "my-bucket" bucket
# mc rb --force test/my-bucket


